/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  LimboOracleLike,
  LimboOracleLikeInterface,
} from "../LimboOracleLike";

const _abi = [
  {
    type: "function",
    name: "RegisterPair",
    inputs: [
      {
        name: "pairAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "period",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "consult",
    inputs: [
      {
        name: "pricedToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "referenceToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "preview",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "amountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "factory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IUniswapV2Factory",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getLastUpdate",
    inputs: [
      {
        name: "token1",
        type: "address",
        internalType: "address",
      },
      {
        name: "token2",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "update",
    inputs: [
      {
        name: "pair",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "update",
    inputs: [
      {
        name: "token0",
        type: "address",
        internalType: "address",
      },
      {
        name: "token1",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class LimboOracleLike__factory {
  static readonly abi = _abi;
  static createInterface(): LimboOracleLikeInterface {
    return new utils.Interface(_abi) as LimboOracleLikeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimboOracleLike {
    return new Contract(address, _abi, signerOrProvider) as LimboOracleLike;
  }
}
